{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo\\\\Desktop\\\\react shop\\\\react-shop\\\\my-app\\\\src\\\\Components\\\\Loginpage\\\\Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './login.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setconfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const refUsername = useRef();\n  const refUsernameSame = useRef();\n  const refEmail = useRef();\n  const refPassword = useRef();\n  const refPasswordSame = useRef();\n  let data = {\n    username: username,\n    email: email,\n    password: password,\n    confirmPassword: confirmPassword\n  };\n\n  function sendData() {\n    fetch('http://localhost:9000/users', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      response.json().then(data => {\n        console.table(data);\n\n        if (data.success) {\n          ispisi(data);\n        }\n      });\n    });\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  function ispisi(data) {\n    if (data.usernameFailed) {\n      refUsername.current.classList.remove('d-none');\n    } else {\n      refUsername.current.classList.add('d-none');\n    } // if (data.usernameLengthFailed) {\n    //     refUsername.classList.remove('d-none')\n    // }\n    // else {\n    //     document.querySelector('.pUsername').classList.add('d-none')\n    // }\n    // if (data.emailFailed) {\n    //     document.querySelector('.pEmail').classList.remove('d-none')\n    // }\n    // else {\n    //     document.querySelector('.pEmail').classList.add('d-none')\n    // }\n    // if (data.passwordLengthFailed) {\n    //     document.querySelector('.pPassword').classList.remove('d-none')\n    // }\n    // else {\n    //     document.querySelector('.pPassword').classList.add('d-none')\n    // }\n    // if (data.confirmPasswordFailed) {\n    //     document.querySelector('.pPasswordConfirm').classList.remove('d-none')\n    // }\n    // else {\n    //     document.querySelector('.pPasswordConfirm').classList.add('d-none')\n    // }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: refUsername,\n      children: \"Username must have more than 6 Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: refUsernameSame,\n      children: \"Account with that username already exists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email address\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: refEmail,\n      children: \"Email address must be valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"d-none\",\n      ref: refPassword,\n      children: \"Password must have atleast 6 Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      onChange: e => setconfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"d-none\",\n      ref: refPasswordSame,\n      children: \"Passwords must be the same\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendData,\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/login\",\n      children: \"Already have an account? Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Eew/aL5toKzGvYt76M7QeAlAq/4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/paulo/Desktop/react shop/react-shop/my-app/src/Components/Loginpage/Signup.jsx"],"names":["React","useState","useRef","Login","username","setUsername","password","setPassword","confirmPassword","setconfirmPassword","email","setEmail","refUsername","refUsernameSame","refEmail","refPassword","refPasswordSame","data","sendData","fetch","method","body","JSON","stringify","headers","then","response","json","console","table","success","ispisi","handleSubmit","e","preventDefault","usernameFailed","current","classList","remove","add","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport './login.scss'\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setconfirmPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const refUsername = useRef()\r\n  const refUsernameSame = useRef()\r\n  const refEmail = useRef()\r\n  const refPassword = useRef()\r\n  const refPasswordSame = useRef()\r\n\r\n  let data = {\r\n    username: username,\r\n    email: email,\r\n    password: password,\r\n    confirmPassword: confirmPassword\r\n  }\r\n\r\n  function sendData() {\r\n    fetch('http://localhost:9000/users', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }).then(response => {\r\n      response.json().then(data => {\r\n\r\n        console.table(data)\r\n        if (data.success) {\r\n          ispisi(data)\r\n        }\r\n      })\r\n    })\r\n\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n  }\r\n  function ispisi(data) {\r\n    if (data.usernameFailed) {\r\n      refUsername.current.classList.remove('d-none')\r\n    }\r\n    else {\r\n      refUsername.current.classList.add('d-none')\r\n    }\r\n    // if (data.usernameLengthFailed) {\r\n    //     refUsername.classList.remove('d-none')\r\n    // }\r\n    // else {\r\n    //     document.querySelector('.pUsername').classList.add('d-none')\r\n    // }\r\n    // if (data.emailFailed) {\r\n    //     document.querySelector('.pEmail').classList.remove('d-none')\r\n    // }\r\n    // else {\r\n    //     document.querySelector('.pEmail').classList.add('d-none')\r\n    // }\r\n    // if (data.passwordLengthFailed) {\r\n    //     document.querySelector('.pPassword').classList.remove('d-none')\r\n    // }\r\n    // else {\r\n    //     document.querySelector('.pPassword').classList.add('d-none')\r\n    // }\r\n    // if (data.confirmPasswordFailed) {\r\n    //     document.querySelector('.pPasswordConfirm').classList.remove('d-none')\r\n    // }\r\n    // else {\r\n    //     document.querySelector('.pPasswordConfirm').classList.add('d-none')\r\n    // }\r\n\r\n  }\r\n\r\n  return (\r\n    <form className='login' onSubmit={handleSubmit}>\r\n      <h2>Sign up</h2>\r\n      <input type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} />\r\n      <p className={refUsername}>Username must have more than 6 Characters</p>\r\n      <p className={refUsernameSame}>Account with that username already exists</p>\r\n      <input type=\"email\" placeholder=\"Email address\" onChange={e => setEmail(e.target.value)}></input>\r\n      <p className={refEmail}>Email address must be valid</p>\r\n      <input type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}></input>\r\n      <p className=\"d-none\" ref={refPassword}>Password must have atleast 6 Characters</p>\r\n      <input type=\"password\" placeholder=\"Confirm Password\" onChange={e => setconfirmPassword(e.target.value)}></input>\r\n      <p className=\"d-none\" ref={refPasswordSame}>Passwords must be the same</p>\r\n      <button onClick={sendData}>Sign up</button>\r\n      <a href=\"/login\">Already have an account? Sign in</a>\r\n      <a href=\"/\">Back</a>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}