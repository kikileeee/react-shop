{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo\\\\Desktop\\\\React shop site\\\\my-app\\\\src\\\\Components\\\\ProductInfo\\\\ProductInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../Homepage/Navbar/Navbar';\nimport './productInfo.scss';\nimport { useLocation } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductInfo = props => {\n  _s();\n\n  const location = useLocation();\n  const product = location.state.product;\n  const [comments, setComments] = useState([]);\n  const [user, setUser] = useState('Guest');\n  const [inputComment, setInputComment] = useState('');\n  const [updateCommentPanel, setUpdateCommentPanel] = useState('');\n  let port = `${process.env.PORT}` || '9000';\n\n  if (port == 'undefined' || undefined) {\n    port = '9000';\n  }\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('userInfo')) !== null) {\n      setUser(JSON.parse(localStorage.getItem('userInfo')).username);\n    }\n\n    fetch(`http://192.168.1.113:${port}/comment`, {\n      method: 'POST',\n      body: JSON.stringify(product),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json().then(data => {\n      if (data.length) {\n        setComments(data);\n      }\n    }));\n  }, [updateCommentPanel]);\n\n  function addComment() {\n    let danas = new Date();\n    let minutes = danas.getMinutes();\n    minutes = minutes > 9 ? minutes : '0' + minutes;\n    let date = danas.getFullYear() + '-' + (danas.getMonth() + 1) + '-' + danas.getDate() + ' at ' + danas.getHours() + \":\" + minutes;\n    let dataComment = {\n      productid: product.productid,\n      user: user,\n      comment: inputComment,\n      date: date\n    };\n\n    if (inputComment != '') {\n      fetch(`http://192.168.1.113:${port}/comment`, {\n        method: 'PUT',\n        body: JSON.stringify(dataComment),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json().then(data => {\n        if (data.length) {\n          console.log(data);\n          setComments(data);\n        }\n      }));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      cartNumber: props.cartNumber,\n      setCartNumber: props.setCartNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: product.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Current price: \", product.productPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(`../Homepage/ProductShowcase/images/${product.productImage}`),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"There is curently \", product.inStock, \" of this product in invetory\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            setInputComment(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \"Insert comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentPanel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generatedComments\",\n          children: comments.map(comment => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: require(`./default.jpg`),\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: comment.user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: comment.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductInfo, \"daftRfiKQXwKqiag8G8IDzNQeUE=\", false, function () {\n  return [useLocation];\n});\n\n_c = ProductInfo;\nexport default ProductInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductInfo\");","map":{"version":3,"sources":["C:/Users/paulo/Desktop/React shop site/my-app/src/Components/ProductInfo/ProductInfo.jsx"],"names":["React","useEffect","useState","Navbar","useLocation","v4","uuidv4","ProductInfo","props","location","product","state","comments","setComments","user","setUser","inputComment","setInputComment","updateCommentPanel","setUpdateCommentPanel","port","process","env","PORT","undefined","JSON","parse","localStorage","getItem","username","fetch","method","body","stringify","headers","then","response","json","data","length","addComment","danas","Date","minutes","getMinutes","date","getFullYear","getMonth","getDate","getHours","dataComment","productid","comment","console","log","cartNumber","setCartNumber","productName","productPrice","require","productImage","inStock","e","target","value","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Navbar from '../Homepage/Navbar/Navbar'\r\nimport './productInfo.scss'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\n\r\nconst ProductInfo = (props) => {\r\n  const location = useLocation();\r\n  const product = location.state.product\r\n  const [comments, setComments] = useState([])\r\n  const [user, setUser] = useState('Guest')\r\n  const [inputComment, setInputComment] = useState('')\r\n  const [updateCommentPanel, setUpdateCommentPanel] = useState('')\r\n  let port = `${process.env.PORT}` || '9000'\r\n    if (port == 'undefined' || undefined) {\r\n        port = '9000'\r\n    }\r\n\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem('userInfo')) !== null) {\r\n      setUser(JSON.parse(localStorage.getItem('userInfo')).username)\r\n    }\r\n    fetch(`http://192.168.1.113:${port}/comment`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(product),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }).then(response => response.json().then(data => {\r\n      if (data.length) {\r\n        setComments(data)\r\n      }\r\n    }))\r\n  }, [updateCommentPanel])\r\n\r\n  function addComment() {\r\n    let danas = new Date()\r\n    let minutes = danas.getMinutes();\r\n    minutes = minutes > 9 ? minutes : '0' + minutes;\r\n    let date = danas.getFullYear() + '-' + (danas.getMonth() + 1) + '-' + danas.getDate() + ' at ' + danas.getHours() + \":\" + minutes\r\n    let dataComment = {\r\n      productid: product.productid,\r\n      user: user,\r\n      comment: inputComment,\r\n      date: date\r\n    }\r\n    if (inputComment != ''){\r\n    fetch(`http://192.168.1.113:${port}/comment`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(dataComment),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }).then(response => response.json().then(data => {\r\n      if (data.length){\r\n        console.log(data)\r\n        setComments(data)\r\n      }\r\n    }))\r\n  }\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar cartNumber={props.cartNumber} setCartNumber={props.setCartNumber} />\r\n      <div className='productInfo'>\r\n\r\n        <div className='product'>\r\n          <h1>{product.productName}</h1>\r\n          <h2>Current price: {product.productPrice}</h2>\r\n          <img src={require(`../Homepage/ProductShowcase/images/${product.productImage}`)} alt=\"\" />\r\n          <h4>There is curently {product.inStock} of this product in invetory</h4>\r\n        </div>\r\n      </div>\r\n      <div className='comments'>\r\n        <div className='inputButton'>\r\n          <input type=\"text\" onChange={e => { setInputComment(e.target.value) }} />\r\n          <button onClick={addComment}>Insert comment</button>\r\n        </div>\r\n        <div className='commentPanel'>\r\n          <div className='generatedComments'>\r\n            {comments.map(comment => {\r\n              return (<div key={uuidv4()}>\r\n                <div className='flex'>\r\n                <img src={require(`./default.jpg`)} alt=\"\" />    \r\n                <h2>{comment.user}</h2>\r\n                <h4>{comment.date}</h4>\r\n                </div>\r\n                <p>{comment.comment}</p>\r\n              </div>)\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductInfo"]},"metadata":{},"sourceType":"module"}