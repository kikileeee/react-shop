{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo\\\\Desktop\\\\react shop\\\\react-shop\\\\my-app\\\\src\\\\Components\\\\Loginpage\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './login.scss';\nimport { BrowserRouter as Router, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const [refUsernamePasswordMatch, setrefUsernamePasswordMatch] = useState('d-none');\n  let body = {\n    username: username,\n    password: password\n  };\n\n  function getDataUsers() {\n    fetch('http://localhost:9000/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(response => response.json().then(data => {\n      console.log(data.loginSuccessful);\n\n      if (data.loginSuccessful) {\n        localStorage.clear();\n        let dataLocal = {\n          username: data.username,\n          adminPrivileges: data.adminPrivileges,\n          picture: data.picture\n        }; // localStorage.setItem('userInfo', JSON.stringify(dataLocal));\n\n        navigate('/');\n      } else {\n        setrefUsernamePasswordMatch('');\n      }\n    }));\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: refUsernamePasswordMatch,\n      children: \"Username and Password dont match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getDataUsers,\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/signup\",\n      children: \"Dont have an account? Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      children: \"Continue as a Guest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Fw/LibZsV0k+FjoWtx2XUs+dDww=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/paulo/Desktop/react shop/react-shop/my-app/src/Components/Loginpage/Login.jsx"],"names":["React","useState","BrowserRouter","Router","useNavigate","Login","username","setUsername","password","setPassword","navigate","refUsernamePasswordMatch","setrefUsernamePasswordMatch","body","getDataUsers","fetch","method","headers","JSON","stringify","then","response","json","data","console","log","loginSuccessful","localStorage","clear","dataLocal","adminPrivileges","picture","handleSubmit","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,WAAlC,QAAqD,kBAArD;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMS,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM,CAACO,wBAAD,EAA2BC,2BAA3B,IAA0DX,QAAQ,CAAC,QAAD,CAAxE;AAIA,MAAIY,IAAI,GAAG;AACTP,IAAAA,QAAQ,EAAEA,QADD;AAETE,IAAAA,QAAQ,EAAEA;AAFD,GAAX;;AAIA,WAASM,YAAT,GAAwB;AACtBC,IAAAA,KAAK,CAAC,mCAAD,EAAsC;AACzCC,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFgC;AAGzCJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHmC,KAAtC,CAAL,CAIGO,IAJH,CAIQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AAC/CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,eAAjB;;AACA,UAAIH,IAAI,CAACG,eAAT,EAA0B;AACxBC,QAAAA,YAAY,CAACC,KAAb;AACA,YAAIC,SAAS,GAAG;AACdvB,UAAAA,QAAQ,EAAEiB,IAAI,CAACjB,QADD;AAEdwB,UAAAA,eAAe,EAAEP,IAAI,CAACO,eAFR;AAGdC,UAAAA,OAAO,EAAER,IAAI,CAACQ;AAHA,SAAhB,CAFwB,CAOtB;;AACFrB,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,OATD,MAUI;AACFE,QAAAA,2BAA2B,CAAC,EAAD,CAA3B;AACD;AACF,KAfmB,CAJpB;AAoBD;;AACD,QAAMoB,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AAED,GAHD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAwB,IAAA,QAAQ,EAAEF,YAAlC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,UAA/B;AAA0C,MAAA,QAAQ,EAAEC,CAAC,IAAI1B,WAAW,CAAC0B,CAAC,CAACE,MAAF,CAASC,KAAV;AAApE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,WAAW,EAAC,UAAnC;AAA8C,MAAA,QAAQ,EAAEH,CAAC,IAAIxB,WAAW,CAACwB,CAAC,CAACE,MAAF,CAASC,KAAV;AAAxE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAG,MAAA,KAAK,EAAEzB,wBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAEG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAG,MAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlDD;;GAAMT,K;UAGaD,W;;;KAHbC,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport './login.scss'\r\nimport { BrowserRouter as Router, useNavigate } from 'react-router-dom'\r\n\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const navigate = useNavigate()\r\n  \r\n  const [refUsernamePasswordMatch, setrefUsernamePasswordMatch] = useState('d-none')\r\n\r\n\r\n\r\n  let body = {\r\n    username: username,\r\n    password: password\r\n  }\r\n  function getDataUsers() {\r\n    fetch('http://localhost:9000/users/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(body)\r\n    }).then(response => response.json().then(data => {\r\n      console.log(data.loginSuccessful)\r\n      if (data.loginSuccessful) {\r\n        localStorage.clear();\r\n        let dataLocal = {\r\n          username: data.username,\r\n          adminPrivileges: data.adminPrivileges,\r\n          picture: data.picture\r\n      }\r\n          // localStorage.setItem('userInfo', JSON.stringify(dataLocal));\r\n        navigate('/')\r\n      }\r\n      else{\r\n        setrefUsernamePasswordMatch('')\r\n      }\r\n    }))\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n  }\r\n  return (\r\n    <form className='login' onSubmit={handleSubmit} >\r\n      <h2>Sign in</h2>\r\n      <input type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}></input>\r\n      <p class={refUsernamePasswordMatch}>Username and Password dont match</p>\r\n      <button onClick={getDataUsers}>Sign in</button>\r\n      <a href=\"/signup\">Dont have an account? Sign up</a>\r\n      <a href=\"/\">Continue as a Guest</a>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}