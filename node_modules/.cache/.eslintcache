[{"C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\index.js":"1","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\App.js":"2","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Loginpage\\Login.jsx":"3","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Homepage\\Home.jsx":"4","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Cartpage\\Cart.jsx":"5","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Loginpage\\Signup.jsx":"6","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\ProductInfo\\ProductInfo.jsx":"7","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Products\\Products.jsx":"8","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Homepage\\Navbar\\Navbar.jsx":"9","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Cartpage\\CartShowcase\\CartShowcase.jsx":"10","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Cartpage\\CartCheckout\\CartCheckout.jsx":"11","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Homepage\\ProductShowcase\\ProductShowcase.jsx":"12","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Cartpage\\CartShowcase\\CartCard\\CartCard.jsx":"13"},{"size":196,"mtime":1644847149015,"results":"14","hashOfConfig":"15"},{"size":1387,"mtime":1645711558378,"results":"16","hashOfConfig":"15"},{"size":1933,"mtime":1646055777848,"results":"17","hashOfConfig":"15"},{"size":681,"mtime":1645542129964,"results":"18","hashOfConfig":"15"},{"size":718,"mtime":1645524933685,"results":"19","hashOfConfig":"15"},{"size":3240,"mtime":1646055787233,"results":"20","hashOfConfig":"15"},{"size":3283,"mtime":1646055795236,"results":"21","hashOfConfig":"15"},{"size":3529,"mtime":1646055823278,"results":"22","hashOfConfig":"15"},{"size":1422,"mtime":1645782946717,"results":"23","hashOfConfig":"15"},{"size":615,"mtime":1645527054052,"results":"24","hashOfConfig":"15"},{"size":831,"mtime":1645534435134,"results":"25","hashOfConfig":"15"},{"size":3429,"mtime":1646055911069,"results":"26","hashOfConfig":"15"},{"size":3536,"mtime":1645540536166,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1duevvz",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"31"},"C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\index.js",[],[],["76","77"],"C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\App.js",["78","79"],[],"import React, {useState} from \"react\";\nimport Home from \"./Components/Homepage/Home\";\nimport Login from \"./Components/Loginpage/Login\";\nimport Signup from \"./Components/Loginpage/Signup\"\nimport './app.scss'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Cart from \"./Components/Cartpage/Cart\";\nimport Products from \"./Components/Products/Products\";\nimport ProductInfo from \"./Components/ProductInfo/ProductInfo\";\n\nfunction App() {\n  let storage = JSON.parse(localStorage.getItem('cart')) || []\n  let total = 0\n  let cart = storage.map(e => {\n    total +=  e.quantity\n  })\n  const [cartNumber, setCartNumber] = useState(`${total}`)\n  return (\n    <Router>\n      <Routes>\n        <Route path='/' element={<Home cartNumber={cartNumber} setCartNumber={setCartNumber}/>}>\n        </Route>\n        <Route path='/login' element={<Login />}>\n        </Route>\n        <Route path='/signup' element={<Signup />}>\n        </Route>\n        <Route path='/cart' element={<Cart cartNumber={cartNumber} setCartNumber={setCartNumber}/>}>\n        </Route>\n        <Route path='/products' element={<Products cartNumber={cartNumber} setCartNumber={setCartNumber}/>}>\n        </Route>\n        <Route path='/productInfo' element={<ProductInfo cartNumber={cartNumber} setCartNumber={setCartNumber}/>}>\n        </Route>\n      </Routes>\n    </Router>\n  )\n}\n\nexport default App;\n","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Loginpage\\Login.jsx",["80"],[],"import React, { useState } from 'react'\r\nimport './login.scss'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const navigate = useNavigate()\r\n  const [refUsernamePasswordMatch, setrefUsernamePasswordMatch] = useState('d-none')\r\n\r\n  let body = {\r\n    username: username,\r\n    password: password\r\n  }\r\n  let url = `${process.env.REACT_APP_IP}:${process.env.REACT_APP_PORT}`   || '192.168.1.113:9000'\r\n  if (url == ':'){\r\n    url = '192.168.1.113:9000'\r\n}\r\n  function getDataUsers() {\r\n    fetch(`http://${url}/users/login`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(body)\r\n    }).then(response => response.json().then(data => {\r\n      if (data.loginSuccessful) {\r\n        localStorage.removeItem('userInfo')\r\n        let dataLocal = {\r\n          username: data.username,\r\n          adminPrivileges: data.adminPrivileges,\r\n          picture: data.picture\r\n      }\r\n          localStorage.setItem('userInfo', JSON.stringify(dataLocal));\r\n        navigate('/')\r\n      }\r\n      else{\r\n        setrefUsernamePasswordMatch('')\r\n      }\r\n    }))\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n  }\r\n  return (\r\n    <form className='login' onSubmit={handleSubmit} >\r\n      <h2>Sign in</h2>\r\n      <input type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}></input>\r\n      <p className={refUsernamePasswordMatch}>Username and Password dont match</p>\r\n      <button onClick={getDataUsers}>Sign in</button>\r\n      <a href=\"/signup\">Dont have an account? Sign up</a>\r\n      <a href=\"/\" onClick={() => {localStorage.removeItem('userInfo')}}>Continue as a Guest</a>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Login","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Homepage\\Home.jsx",[],[],"C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Cartpage\\Cart.jsx",[],[],"C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Loginpage\\Signup.jsx",["81"],[],"import React, { useState} from 'react'\r\nimport './login.scss'\r\nimport {  useNavigate } from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setconfirmPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const navigate = useNavigate()\r\n\r\n  const [refUsername, setrefUsername] = useState('d-none')\r\n  const [refUsernameSame, setrefUsernameSame] = useState('d-none')\r\n  const [refEmail, setRefEmail] = useState('d-none')\r\n  const [refPassword, setRefPassword] = useState('d-none')\r\n  const [refPasswordSame, setRefPasswordSame] = useState('d-none')\r\n\r\n\r\n\r\n  let data = {\r\n    username: username,\r\n    email: email,\r\n    password: password,\r\n    confirmPassword: confirmPassword\r\n  }\r\n  let url = `${process.env.REACT_APP_IP}:${process.env.REACT_APP_PORT}`   || '192.168.1.113:9000'\r\n  if (url == ':'){\r\n    url = '192.168.1.113:9000'\r\n}\r\n\r\n  function sendData() {\r\n    fetch(`http://${url}/users`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }).then(response => {\r\n      response.json().then(data => {\r\n\r\n        console.table(data)\r\n        ispisi(data)\r\n        if (data.success) {\r\n          navigate('/login')\r\n        }\r\n      })\r\n    })\r\n\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n  }\r\n  function ispisi(data) {\r\n    console.log('ispis')\r\n    if (data.usernameFailed) {\r\n      setrefUsername('')\r\n    }\r\n    else {\r\n      setrefUsername('d-none')\r\n    }\r\n    if (data.usernameLengthFailed) {\r\n      setrefUsernameSame('')\r\n    }\r\n    else {\r\n      setrefUsernameSame('d-none')\r\n    }\r\n    if (data.emailFailed) {\r\n      setRefEmail('')\r\n    }\r\n    else {\r\n      setRefEmail('d-none')\r\n    }\r\n    if (data.passwordLengthFailed) {\r\n      setRefPassword('')\r\n    }\r\n    else {\r\n      setRefPassword('d-none')\r\n    }\r\n    if (data.confirmPasswordFailed) {\r\n      setRefPasswordSame('')\r\n    }\r\n    else {\r\n      setRefPasswordSame('d-none')\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form className='login' onSubmit={handleSubmit}>\r\n      <h2>Sign up</h2>\r\n      <input type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} />\r\n      <p className={refUsername}>Username must have more than 6 Characters</p>\r\n      <p className={refUsernameSame}>Account with that username already exists</p>\r\n      <input type=\"email\" placeholder=\"Email address\" onChange={e => setEmail(e.target.value)}></input>\r\n      <p className={refEmail}>Email address must be valid</p>\r\n      <input type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}></input>\r\n      <p className={refPassword}>Password must have atleast 6 Characters</p>\r\n      <input type=\"password\" placeholder=\"Confirm Password\" onChange={e => setconfirmPassword(e.target.value)}></input>\r\n      <p className={refPasswordSame}>Passwords must be the same</p>\r\n      <button onClick={sendData}>Sign up</button>\r\n      <a href=\"/login\">Already have an account? Sign in</a>\r\n      <a href=\"/\" onClick={ () => { localStorage.removeItem('userInfo') }}>Continue as a Guest</a>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Login","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\ProductInfo\\ProductInfo.jsx",["82","83","84","85"],[],"import React, { useEffect, useState } from 'react'\r\nimport Navbar from '../Homepage/Navbar/Navbar'\r\nimport './productInfo.scss'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\n\r\nconst ProductInfo = (props) => {\r\n  const location = useLocation();\r\n  const product = location.state.product\r\n  const [comments, setComments] = useState([])\r\n  const [user, setUser] = useState('Guest')\r\n  const [inputComment, setInputComment] = useState('')\r\n  const [updateCommentPanel, setUpdateCommentPanel] = useState('')\r\n  let url = `${process.env.REACT_APP_IP}:${process.env.REACT_APP_PORT}`  || '192.168.1.113:9000'\r\n  if (url == ':'){\r\n    url = '192.168.1.113:9000'\r\n}\r\n\r\n\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem('userInfo')) !== null) {\r\n      setUser(JSON.parse(localStorage.getItem('userInfo')).username)\r\n    }\r\n    fetch(`http://${url}/comment`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(product),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }).then(response => response.json().then(data => {\r\n      if (data.length) {\r\n        setComments(data)\r\n      }\r\n    }))\r\n  }, [updateCommentPanel])\r\n\r\n  function addComment() {\r\n    let danas = new Date()\r\n    let minutes = danas.getMinutes();\r\n    minutes = minutes > 9 ? minutes : '0' + minutes;\r\n    let date = danas.getFullYear() + '-' + (danas.getMonth() + 1) + '-' + danas.getDate() + ' at ' + danas.getHours() + \":\" + minutes\r\n    let dataComment = {\r\n      productid: product.productid,\r\n      user: user,\r\n      comment: inputComment,\r\n      date: date\r\n    }\r\n    console.table(dataComment)\r\n    if (inputComment != ''){\r\n    fetch(`http://192.168.1.113:9000/comment`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(dataComment),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }).then(response => response.json().then(data => {\r\n      if (data.length){\r\n        console.log(data)\r\n        setComments(data)\r\n      }\r\n    }))\r\n  }\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar cartNumber={props.cartNumber} setCartNumber={props.setCartNumber} />\r\n      <div className='productInfo'>\r\n\r\n        <div className='product'>\r\n          <h1>{product.productName}</h1>\r\n          <h2>Current price: {product.productPrice}</h2>\r\n          <img src={require(`../Homepage/ProductShowcase/images/${product.productImage}`)} alt=\"\" />\r\n          <h4>There is curently {product.inStock} of this product in invetory</h4>\r\n        </div>\r\n      </div>\r\n      <div className='comments'>\r\n        <div className='inputButton'>\r\n          <input type=\"text\" onChange={e => { setInputComment(e.target.value) }} />\r\n          <button onClick={addComment}>Insert comment</button>\r\n        </div>\r\n        <div className='commentPanel'>\r\n          <div className='generatedComments'>\r\n            {comments.map(comment => {\r\n              return (<div key={uuidv4()}>\r\n                <div className='flex'>\r\n                <img src={require(`./default.jpg`)} alt=\"\" />    \r\n                <h2>{comment.user}</h2>\r\n                <h4>{comment.date}</h4>\r\n                </div>\r\n                <p>{comment.comment}</p>\r\n              </div>)\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductInfo","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Products\\Products.jsx",["86","87","88","89","90","91","92","93"],[],"import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../Homepage/Navbar/Navbar'\r\nimport './products.scss'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCartSharp';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Products = (props) => {\r\n    const [Products, SetProducts] = useState([]);\r\n    const [Search, setSearch] = useState('')\r\n    const navigate = useNavigate()\r\n    let url = `${process.env.REACT_APP_IP}:${process.env.REACT_APP_PORT}`  || '192.168.1.113:9000'\r\n    if (url == ':'){\r\n        url = '192.168.1.113:9000'\r\n    }\r\n    useEffect(() => {\r\n        fetch(`http://${url}/popular`, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(response => response.json().then(data => {\r\n            SetProducts(data)\r\n        }))\r\n    }, [])\r\n    function addItem(x) {\r\n        let a = []\r\n        let pushNewData = true\r\n        a = JSON.parse(localStorage.getItem('cart')) || [];\r\n\r\n        let total = 1\r\n        let cart = a.map(e => {\r\n            total += e.quantity\r\n        })\r\n\r\n        a.find(item => {\r\n            if (item.productid == x.productid) {\r\n                item.quantity += 1\r\n                pushNewData = false\r\n                props.setCartNumber(`${total}`)\r\n                localStorage.setItem('cart', JSON.stringify(a))\r\n            }\r\n        })\r\n        if (pushNewData) {\r\n            x.quantity = 1\r\n            a.push(x);\r\n            props.setCartNumber(`${total}`)\r\n            localStorage.setItem('cart', JSON.stringify(a))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar cartNumber={props.cartNumber} setCartNumber={props.setCartNumber} />\r\n            <div>\r\n                <div className='products'>\r\n                    <div className='search'>\r\n                        <label htmlFor=\"\"> Search\r\n                            <SearchIcon />\r\n                            <input type=\"text\" onChange={e => { setSearch(e.target.value) }} />\r\n                        </label>\r\n                        \r\n                    <h1>All Products</h1>\r\n                    </div>\r\n\r\n                    <div className='productsPanel'>\r\n                        {Products.filter(e => {\r\n                            if (Search == '') {\r\n                                return e\r\n                            } else if (e.productName.toLowerCase().includes(Search.toLowerCase())) {\r\n                                return e\r\n                            }\r\n                        }).map(product => {\r\n                            return <div className='card' key={uuidv4()}>\r\n                                <h2>{product.productName}</h2>\r\n                                <h3>Current price: {product.productPrice}$</h3>\r\n                                <h4 onClick={() => {navigate(`/productInfo`,{state:{product:product}})}}>Click for more info</h4>\r\n                                <img src={require(`../Homepage/ProductShowcase/images/${product.productImage}`)} alt=\"\" />\r\n                                <div className='blackOverlay'>\r\n                                    <button onClick={() => { addItem(product) }}><AddShoppingCartIcon /></button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        })}\r\n\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Products","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Homepage\\Navbar\\Navbar.jsx",["94","95"],[],"import React, { useState, useEffect } from 'react'\r\nimport './navbar.scss'\r\nimport AddShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\n\r\nconst Navbar = (props) => {\r\n  const [user, setUser] = useState('Guest')\r\n  const [login, setLogin] = useState('Log in')\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem('userInfo')) !== null) {\r\n      setUser(JSON.parse(localStorage.getItem('userInfo')).username)\r\n      setLogin('Log out')\r\n    }\r\n    else {\r\n      setLogin('Log in')\r\n    }\r\n  }, [])\r\n  function resetData() {\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('cart')\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <nav className='navBar'>\r\n      <ul>\r\n        <div className='firstNav'>\r\n          <li><a href=\"/\">Home</a></li>\r\n          <li> <a href=\"/products\">Our products</a></li>\r\n        </div>\r\n        <div className='secondNav'>\r\n          <li><a className='numberCart' href=\"/cart\" data-after={props.cartNumber}><AddShoppingCartIcon /></a></li>\r\n          <li>\r\n            <div className=\"dropdown\">\r\n              <a className=\"dropbtn\">{user}</a>\r\n              <div className=\"dropdown-content\">\r\n                <a href=\"#\" className='aDrop'>Settings</a>\r\n                <a href=\"login\" className='aDrop' onClick={resetData}>{login}</a>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Cartpage\\CartShowcase\\CartShowcase.jsx",[],[],"C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Cartpage\\CartCheckout\\CartCheckout.jsx",[],[],"C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Homepage\\ProductShowcase\\ProductShowcase.jsx",["96","97","98","99","100","101"],[],"import React, { useState, useEffect, useRef } from 'react'\r\nimport './productShowcase.scss'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCartSharp';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst ProductShowcase = (props) => {\r\n    const [Products, SetProducts] = useState([]);\r\n    const inputBackNext = useRef()\r\n    const navigate = useNavigate()\r\n    let url = `${process.env.REACT_APP_IP}:${process.env.REACT_APP_PORT}`  || '192.168.1.113:9000'\r\n    console.log(url)\r\n    if (url == ':'){\r\n        url = '192.168.1.113:9000'\r\n    }\r\n    useEffect(() => {\r\n        fetch(`http://${url}/` + props.fetch, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(response => response.json().then(data => {\r\n            SetProducts(data)\r\n        }))\r\n    }, [])\r\n    const scroll = (scrollOffset) => {\r\n        inputBackNext.current.scrollLeft += scrollOffset;\r\n    };\r\n\r\n    function goBack() {\r\n        scroll(-340)\r\n    }\r\n    function goNext() {\r\n        scroll(340)\r\n    }\r\n    function addItem(x) {\r\n        let a = []\r\n        let pushNewData = true\r\n        a = JSON.parse(localStorage.getItem('cart')) || [];\r\n\r\n        let total = 1\r\n        let cart = a.map(e => {\r\n            total += e.quantity\r\n        })\r\n\r\n        a.find(item => {\r\n            if (item.productid == x.productid) {\r\n                item.quantity += 1\r\n                pushNewData = false\r\n                props.setCartNumber(`${total}`)\r\n                localStorage.setItem('cart', JSON.stringify(a))\r\n            }\r\n        })\r\n        if (pushNewData) {\r\n            x.quantity = 1\r\n            a.push(x);\r\n            props.setCartNumber(`${total}`)\r\n            localStorage.setItem('cart', JSON.stringify(a))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='productShowcaseWrapper'>\r\n\r\n            <h1>{props.name}</h1>\r\n            <div className='productShowcase' ref={inputBackNext}>\r\n                <div className='slides'>\r\n                    <div className='divBack'><button className='back' onClick={goBack} ><ArrowBackIosNewIcon /></button></div>\r\n                    <div className='divNext'><button className='next' onClick={goNext}><ArrowForwardIosIcon /></button></div>\r\n                    <div className='productCard'>\r\n                        {Products.map(product => (\r\n                            <div className='card' key={uuidv4()}>\r\n                                <h2>{product.productName}</h2>\r\n                                <h3>Current price: {product.productPrice}$</h3>\r\n                                <h4 onClick={() => {navigate(`/productInfo`,{state:{product:product}})}}>Click for more info</h4>\r\n                                <img src={require(`../ProductShowcase/images/${product.productImage}`)} alt=\"\" />\r\n                                <div className='blackOverlay'>\r\n                                    <button onClick={() => { addItem(product) }}><AddShoppingCartIcon /></button>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductShowcase","C:\\Users\\paulo\\Desktop\\React shop site\\react-shop\\my-app\\src\\Components\\Cartpage\\CartShowcase\\CartCard\\CartCard.jsx",["102","103","104","105","106","107","108","109","110","111","112","113","114"],[],"import React from 'react'\r\nimport './cartCard.scss'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { useRef, useState } from 'react';\r\n\r\nconst CartCard = (props) => {\r\n    const deleteButton = useRef()\r\n\r\n    let storage = JSON.parse(localStorage.getItem('cart')) || []\r\n    const [itemsInProps, setItemsInProps] = useState(storage)\r\n\r\n    function deleteCard(x) {\r\n        let filtered = itemsInProps.filter(function (item) {\r\n            return item.productid !== x.productid\r\n        })\r\n        setItemsInProps(filtered)\r\n        props.setTotalPrice(filtered)\r\n        let total = 0\r\n        let cart = filtered.map(e => {\r\n            total += e.quantity\r\n        })\r\n        props.setCartNumber(`${total}`)\r\n        localStorage.removeItem('cart')\r\n        localStorage.setItem('cart', JSON.stringify(filtered));\r\n\r\n    }\r\n    function minusQuantity(x) {\r\n\r\n        storage.find(item => {\r\n            if (item.productid == x.productid) {\r\n\r\n                if (item.quantity == 1) {\r\n                    let filtered = storage.filter(itemFilter => itemFilter !== item)\r\n                    setItemsInProps(filtered)\r\n                    props.setTotalPrice(filtered)\r\n                    \r\n                    let total = 0\r\n                    let cart = filtered.map(e => {\r\n                        total += e.quantity\r\n                    })\r\n                    props.setCartNumber(`${total}`)\r\n                    localStorage.removeItem('cart')\r\n                    localStorage.setItem('cart', JSON.stringify(filtered));\r\n                }\r\n                else {\r\n                    item.quantity -= 1\r\n                    setItemsInProps(storage)\r\n                    props.setTotalPrice(storage)\r\n                    let total = 0\r\n                    let cart = storage.map(e => {\r\n                        total += e.quantity\r\n                    })\r\n                    props.setCartNumber(`${total}`)\r\n                    localStorage.removeItem('cart')\r\n                    localStorage.setItem('cart', JSON.stringify(storage));\r\n                }\r\n\r\n            }\r\n        })\r\n    }\r\n    function plusQuantity(x) {\r\n        let total = 0\r\n        let cart = storage.map(e => {\r\n            total += e.quantity\r\n        })\r\n        storage.find(item => {\r\n            if (item.productid == x.productid) {\r\n                item.quantity += 1\r\n                setItemsInProps(storage)\r\n                props.setTotalPrice(storage)\r\n                props.setCartNumber(`${total +1}`)\r\n                localStorage.removeItem('cart')\r\n                localStorage.setItem('cart', JSON.stringify(storage));\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className='cartCard'>\r\n            {itemsInProps.map(item => (\r\n                <div ref={deleteButton} className='items' key={uuidv4()}>\r\n                    <img src={require(`../../../Homepage/ProductShowcase/images/${item.productImage}`)} alt=\"\" />\r\n                    <p className='name'>{item.productName}</p>\r\n                    <p className='price'>{item.productPrice}$</p>\r\n                    <div className='quantity'>\r\n                        <button onClick={() => { minusQuantity(item) }}>-</button>\r\n                        <p>{item.quantity}</p>\r\n                        <button onClick={() => { plusQuantity(item) }}>+</button>\r\n                    </div>\r\n                    <button onClick={() => { deleteCard(item) }}><p>x</p></button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartCard",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":14,"column":7,"nodeType":"121","messageId":"122","endLine":14,"endColumn":11},{"ruleId":"123","severity":1,"message":"124","line":14,"column":28,"nodeType":"125","messageId":"126","endLine":14,"endColumn":30},{"ruleId":"127","severity":1,"message":"128","line":17,"column":11,"nodeType":"129","messageId":"130","endLine":17,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":27,"column":11,"nodeType":"129","messageId":"130","endLine":27,"endColumn":13},{"ruleId":"119","severity":1,"message":"131","line":14,"column":30,"nodeType":"121","messageId":"122","endLine":14,"endColumn":51},{"ruleId":"127","severity":1,"message":"128","line":16,"column":11,"nodeType":"129","messageId":"130","endLine":16,"endColumn":13},{"ruleId":"132","severity":1,"message":"133","line":34,"column":6,"nodeType":"134","endLine":34,"endColumn":26,"suggestions":"135"},{"ruleId":"127","severity":1,"message":"136","line":48,"column":22,"nodeType":"129","messageId":"130","endLine":48,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":14,"column":13,"nodeType":"129","messageId":"130","endLine":14,"endColumn":15},{"ruleId":"132","severity":1,"message":"137","line":24,"column":8,"nodeType":"134","endLine":24,"endColumn":10,"suggestions":"138"},{"ruleId":"119","severity":1,"message":"120","line":31,"column":13,"nodeType":"121","messageId":"122","endLine":31,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":31,"column":28,"nodeType":"125","messageId":"126","endLine":31,"endColumn":30},{"ruleId":"123","severity":1,"message":"139","line":35,"column":21,"nodeType":"125","messageId":"126","endLine":35,"endColumn":23},{"ruleId":"127","severity":1,"message":"128","line":36,"column":32,"nodeType":"129","messageId":"130","endLine":36,"endColumn":34},{"ruleId":"123","severity":1,"message":"140","line":65,"column":44,"nodeType":"125","messageId":"141","endLine":65,"endColumn":46},{"ruleId":"127","severity":1,"message":"128","line":66,"column":40,"nodeType":"129","messageId":"130","endLine":66,"endColumn":42},{"ruleId":"142","severity":1,"message":"143","line":35,"column":15,"nodeType":"144","endLine":35,"endColumn":38},{"ruleId":"142","severity":1,"message":"145","line":37,"column":17,"nodeType":"144","endLine":37,"endColumn":47},{"ruleId":"127","severity":1,"message":"128","line":15,"column":13,"nodeType":"129","messageId":"130","endLine":15,"endColumn":15},{"ruleId":"132","severity":1,"message":"146","line":25,"column":8,"nodeType":"134","endLine":25,"endColumn":10,"suggestions":"147"},{"ruleId":"119","severity":1,"message":"120","line":42,"column":13,"nodeType":"121","messageId":"122","endLine":42,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":42,"column":28,"nodeType":"125","messageId":"126","endLine":42,"endColumn":30},{"ruleId":"123","severity":1,"message":"139","line":46,"column":21,"nodeType":"125","messageId":"126","endLine":46,"endColumn":23},{"ruleId":"127","severity":1,"message":"128","line":47,"column":32,"nodeType":"129","messageId":"130","endLine":47,"endColumn":34},{"ruleId":"119","severity":1,"message":"120","line":19,"column":13,"nodeType":"121","messageId":"122","endLine":19,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":19,"column":35,"nodeType":"125","messageId":"126","endLine":19,"endColumn":37},{"ruleId":"123","severity":1,"message":"139","line":29,"column":27,"nodeType":"125","messageId":"126","endLine":29,"endColumn":29},{"ruleId":"127","severity":1,"message":"128","line":30,"column":32,"nodeType":"129","messageId":"130","endLine":30,"endColumn":34},{"ruleId":"127","severity":1,"message":"128","line":32,"column":35,"nodeType":"129","messageId":"130","endLine":32,"endColumn":37},{"ruleId":"119","severity":1,"message":"120","line":38,"column":25,"nodeType":"121","messageId":"122","endLine":38,"endColumn":29},{"ruleId":"123","severity":1,"message":"124","line":38,"column":47,"nodeType":"125","messageId":"126","endLine":38,"endColumn":49},{"ruleId":"119","severity":1,"message":"120","line":50,"column":25,"nodeType":"121","messageId":"122","endLine":50,"endColumn":29},{"ruleId":"123","severity":1,"message":"124","line":50,"column":46,"nodeType":"125","messageId":"126","endLine":50,"endColumn":48},{"ruleId":"119","severity":1,"message":"120","line":63,"column":13,"nodeType":"121","messageId":"122","endLine":63,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":63,"column":34,"nodeType":"125","messageId":"126","endLine":63,"endColumn":36},{"ruleId":"123","severity":1,"message":"139","line":66,"column":27,"nodeType":"125","messageId":"126","endLine":66,"endColumn":29},{"ruleId":"127","severity":1,"message":"128","line":67,"column":32,"nodeType":"129","messageId":"130","endLine":67,"endColumn":34},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'cart' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setUpdateCommentPanel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'product' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["150"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["151"],"Array.prototype.find() expects a return value from arrow function.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'props.fetch' and 'url'. Either include them or remove the dependency array.",["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [product, updateCommentPanel, url]",{"range":"159","text":"160"},"Update the dependencies array to be: [url]",{"range":"161","text":"162"},"Update the dependencies array to be: [props.fetch, url]",{"range":"163","text":"164"},[1154,1174],"[product, updateCommentPanel, url]",[938,940],"[url]",[1021,1023],"[props.fetch, url]"]