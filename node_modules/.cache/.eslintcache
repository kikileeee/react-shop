[{"C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\index.js":"1","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\App.js":"2","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Loginpage\\Signup.jsx":"3","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\ProductInfo\\ProductInfo.jsx":"4","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Loginpage\\Login.jsx":"5","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Cartpage\\Cart.jsx":"6","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Products\\Products.jsx":"7","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Homepage\\Home.jsx":"8","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Cartpage\\CartCheckout\\CartCheckout.jsx":"9","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Homepage\\Navbar\\Navbar.jsx":"10","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Homepage\\ProductShowcase\\ProductShowcase.jsx":"11","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Cartpage\\CartShowcase\\CartShowcase.jsx":"12","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Cartpage\\CartShowcase\\CartCard\\CartCard.jsx":"13"},{"size":196,"mtime":1644847149015,"results":"14","hashOfConfig":"15"},{"size":1387,"mtime":1645711558378,"results":"16","hashOfConfig":"15"},{"size":3142,"mtime":1646124602371,"results":"17","hashOfConfig":"15"},{"size":3157,"mtime":1646124607560,"results":"18","hashOfConfig":"15"},{"size":1837,"mtime":1646124597094,"results":"19","hashOfConfig":"15"},{"size":718,"mtime":1645524933685,"results":"20","hashOfConfig":"15"},{"size":3424,"mtime":1646124611184,"results":"21","hashOfConfig":"15"},{"size":681,"mtime":1645542129964,"results":"22","hashOfConfig":"15"},{"size":831,"mtime":1645534435134,"results":"23","hashOfConfig":"15"},{"size":1422,"mtime":1645782946717,"results":"24","hashOfConfig":"15"},{"size":3276,"mtime":1646124568423,"results":"25","hashOfConfig":"15"},{"size":615,"mtime":1645527054052,"results":"26","hashOfConfig":"15"},{"size":3536,"mtime":1645540536166,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"11k0h7x",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"31"},"C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\index.js",[],[],["74","75"],"C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\App.js",["76","77"],[],"import React, {useState} from \"react\";\nimport Home from \"./Components/Homepage/Home\";\nimport Login from \"./Components/Loginpage/Login\";\nimport Signup from \"./Components/Loginpage/Signup\"\nimport './app.scss'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Cart from \"./Components/Cartpage/Cart\";\nimport Products from \"./Components/Products/Products\";\nimport ProductInfo from \"./Components/ProductInfo/ProductInfo\";\n\nfunction App() {\n  let storage = JSON.parse(localStorage.getItem('cart')) || []\n  let total = 0\n  let cart = storage.map(e => {\n    total +=  e.quantity\n  })\n  const [cartNumber, setCartNumber] = useState(`${total}`)\n  return (\n    <Router>\n      <Routes>\n        <Route path='/' element={<Home cartNumber={cartNumber} setCartNumber={setCartNumber}/>}>\n        </Route>\n        <Route path='/login' element={<Login />}>\n        </Route>\n        <Route path='/signup' element={<Signup />}>\n        </Route>\n        <Route path='/cart' element={<Cart cartNumber={cartNumber} setCartNumber={setCartNumber}/>}>\n        </Route>\n        <Route path='/products' element={<Products cartNumber={cartNumber} setCartNumber={setCartNumber}/>}>\n        </Route>\n        <Route path='/productInfo' element={<ProductInfo cartNumber={cartNumber} setCartNumber={setCartNumber}/>}>\n        </Route>\n      </Routes>\n    </Router>\n  )\n}\n\nexport default App;\n","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Loginpage\\Signup.jsx",[],[],"C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\ProductInfo\\ProductInfo.jsx",["78","79","80"],[],"import React, { useEffect, useState } from 'react'\r\nimport Navbar from '../Homepage/Navbar/Navbar'\r\nimport './productInfo.scss'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\n\r\nconst ProductInfo = (props) => {\r\n  const location = useLocation();\r\n  const product = location.state.product\r\n  const [comments, setComments] = useState([])\r\n  const [user, setUser] = useState('Guest')\r\n  const [inputComment, setInputComment] = useState('')\r\n  const [updateCommentPanel, setUpdateCommentPanel] = useState('')\r\n  const port = process.env.PORT || '9000'\r\n\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem('userInfo')) !== null) {\r\n      setUser(JSON.parse(localStorage.getItem('userInfo')).username)\r\n    }\r\n    fetch(`http://192.168.1.113:${port}/comment`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(product),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }).then(response => response.json().then(data => {\r\n      if (data.length) {\r\n        setComments(data)\r\n      }\r\n    }))\r\n  }, [updateCommentPanel])\r\n\r\n  function addComment() {\r\n    let danas = new Date()\r\n    let minutes = danas.getMinutes();\r\n    minutes = minutes > 9 ? minutes : '0' + minutes;\r\n    let date = danas.getFullYear() + '-' + (danas.getMonth() + 1) + '-' + danas.getDate() + ' at ' + danas.getHours() + \":\" + minutes\r\n    let dataComment = {\r\n      productid: product.productid,\r\n      user: user,\r\n      comment: inputComment,\r\n      date: date\r\n    }\r\n    if (inputComment != ''){\r\n    fetch(`http://192.168.1.113:${port}/comment`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(dataComment),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }).then(response => response.json().then(data => {\r\n      if (data.length){\r\n        console.log(data)\r\n        setComments(data)\r\n      }\r\n    }))\r\n  }\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar cartNumber={props.cartNumber} setCartNumber={props.setCartNumber} />\r\n      <div className='productInfo'>\r\n\r\n        <div className='product'>\r\n          <h1>{product.productName}</h1>\r\n          <h2>Current price: {product.productPrice}</h2>\r\n          <img src={require(`../Homepage/ProductShowcase/images/${product.productImage}`)} alt=\"\" />\r\n          <h4>There is curently {product.inStock} of this product in invetory</h4>\r\n        </div>\r\n      </div>\r\n      <div className='comments'>\r\n        <div className='inputButton'>\r\n          <input type=\"text\" onChange={e => { setInputComment(e.target.value) }} />\r\n          <button onClick={addComment}>Insert comment</button>\r\n        </div>\r\n        <div className='commentPanel'>\r\n          <div className='generatedComments'>\r\n            {comments.map(comment => {\r\n              return (<div key={uuidv4()}>\r\n                <div className='flex'>\r\n                <img src={require(`./default.jpg`)} alt=\"\" />    \r\n                <h2>{comment.user}</h2>\r\n                <h4>{comment.date}</h4>\r\n                </div>\r\n                <p>{comment.comment}</p>\r\n              </div>)\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductInfo","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Loginpage\\Login.jsx",[],[],"C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Cartpage\\Cart.jsx",[],[],"C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Products\\Products.jsx",["81","82","83","84","85","86","87"],[],"import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../Homepage/Navbar/Navbar'\r\nimport './products.scss'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCartSharp';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Products = (props) => {\r\n    const [Products, SetProducts] = useState([]);\r\n    const [Search, setSearch] = useState('')\r\n    const navigate = useNavigate()\r\n    const port = process.env.PORT || '9000'\r\n    useEffect(() => {\r\n        fetch(`http://192.168.1.113:${port}/popular`, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(response => response.json().then(data => {\r\n            SetProducts(data)\r\n        }))\r\n    }, [])\r\n    function addItem(x) {\r\n        let a = []\r\n        let pushNewData = true\r\n        a = JSON.parse(localStorage.getItem('cart')) || [];\r\n\r\n        let total = 1\r\n        let cart = a.map(e => {\r\n            total += e.quantity\r\n        })\r\n\r\n        a.find(item => {\r\n            if (item.productid == x.productid) {\r\n                item.quantity += 1\r\n                pushNewData = false\r\n                props.setCartNumber(`${total}`)\r\n                localStorage.setItem('cart', JSON.stringify(a))\r\n            }\r\n        })\r\n        if (pushNewData) {\r\n            x.quantity = 1\r\n            a.push(x);\r\n            props.setCartNumber(`${total}`)\r\n            localStorage.setItem('cart', JSON.stringify(a))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar cartNumber={props.cartNumber} setCartNumber={props.setCartNumber} />\r\n            <div>\r\n                <div className='products'>\r\n                    <div className='search'>\r\n                        <label htmlFor=\"\"> Search\r\n                            <SearchIcon />\r\n                            <input type=\"text\" onChange={e => { setSearch(e.target.value) }} />\r\n                        </label>\r\n                        \r\n                    <h1>All Products</h1>\r\n                    </div>\r\n\r\n                    <div className='productsPanel'>\r\n                        {Products.filter(e => {\r\n                            if (Search == '') {\r\n                                return e\r\n                            } else if (e.productName.toLowerCase().includes(Search.toLowerCase())) {\r\n                                return e\r\n                            }\r\n                        }).map(product => {\r\n                            return <div className='card' key={uuidv4()}>\r\n                                <h2>{product.productName}</h2>\r\n                                <h3>Current price: {product.productPrice}$</h3>\r\n                                <h4 onClick={() => {navigate(`/productInfo`,{state:{product:product}})}}>Click for more info</h4>\r\n                                <img src={require(`../Homepage/ProductShowcase/images/${product.productImage}`)} alt=\"\" />\r\n                                <div className='blackOverlay'>\r\n                                    <button onClick={() => { addItem(product) }}><AddShoppingCartIcon /></button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        })}\r\n\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Products","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Homepage\\Home.jsx",[],[],"C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Cartpage\\CartCheckout\\CartCheckout.jsx",[],[],"C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Homepage\\Navbar\\Navbar.jsx",["88","89"],[],"import React, { useState, useEffect } from 'react'\r\nimport './navbar.scss'\r\nimport AddShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\n\r\nconst Navbar = (props) => {\r\n  const [user, setUser] = useState('Guest')\r\n  const [login, setLogin] = useState('Log in')\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem('userInfo')) !== null) {\r\n      setUser(JSON.parse(localStorage.getItem('userInfo')).username)\r\n      setLogin('Log out')\r\n    }\r\n    else {\r\n      setLogin('Log in')\r\n    }\r\n  }, [])\r\n  function resetData() {\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('cart')\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <nav className='navBar'>\r\n      <ul>\r\n        <div className='firstNav'>\r\n          <li><a href=\"/\">Home</a></li>\r\n          <li> <a href=\"/products\">Our products</a></li>\r\n        </div>\r\n        <div className='secondNav'>\r\n          <li><a className='numberCart' href=\"/cart\" data-after={props.cartNumber}><AddShoppingCartIcon /></a></li>\r\n          <li>\r\n            <div className=\"dropdown\">\r\n              <a className=\"dropbtn\">{user}</a>\r\n              <div className=\"dropdown-content\">\r\n                <a href=\"#\" className='aDrop'>Settings</a>\r\n                <a href=\"login\" className='aDrop' onClick={resetData}>{login}</a>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Homepage\\ProductShowcase\\ProductShowcase.jsx",["90","91","92","93","94","95"],[],"import React, { useState, useEffect, useRef } from 'react'\r\nimport './productShowcase.scss'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCartSharp';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst ProductShowcase = (props) => {\r\n    const [Products, SetProducts] = useState([]);\r\n    const inputBackNext = useRef()\r\n    const navigate = useNavigate()\r\n    const port = process.env.PORT || '9000'\r\n\r\n    useEffect(() => {\r\n        fetch(`/` + props.fetch, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(response => response.json().then(data => {\r\n            SetProducts(data)\r\n        }))\r\n    }, [])\r\n    const scroll = (scrollOffset) => {\r\n        inputBackNext.current.scrollLeft += scrollOffset;\r\n    };\r\n\r\n    function goBack() {\r\n        scroll(-340)\r\n    }\r\n    function goNext() {\r\n        scroll(340)\r\n    }\r\n    function addItem(x) {\r\n        let a = []\r\n        let pushNewData = true\r\n        a = JSON.parse(localStorage.getItem('cart')) || [];\r\n\r\n        let total = 1\r\n        let cart = a.map(e => {\r\n            total += e.quantity\r\n        })\r\n\r\n        a.find(item => {\r\n            if (item.productid == x.productid) {\r\n                item.quantity += 1\r\n                pushNewData = false\r\n                props.setCartNumber(`${total}`)\r\n                localStorage.setItem('cart', JSON.stringify(a))\r\n            }\r\n        })\r\n        if (pushNewData) {\r\n            x.quantity = 1\r\n            a.push(x);\r\n            props.setCartNumber(`${total}`)\r\n            localStorage.setItem('cart', JSON.stringify(a))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='productShowcaseWrapper'>\r\n\r\n            <h1>{props.name}</h1>\r\n            <div className='productShowcase' ref={inputBackNext}>\r\n                <div className='slides'>\r\n                    <div className='divBack'><button className='back' onClick={goBack} ><ArrowBackIosNewIcon /></button></div>\r\n                    <div className='divNext'><button className='next' onClick={goNext}><ArrowForwardIosIcon /></button></div>\r\n                    <div className='productCard'>\r\n                        {Products.map(product => (\r\n                            <div className='card' key={uuidv4()}>\r\n                                <h2>{product.productName}</h2>\r\n                                <h3>Current price: {product.productPrice}$</h3>\r\n                                <h4 onClick={() => {navigate(`/productInfo`,{state:{product:product}})}}>Click for more info</h4>\r\n                                <img src={require(`../ProductShowcase/images/${product.productImage}`)} alt=\"\" />\r\n                                <div className='blackOverlay'>\r\n                                    <button onClick={() => { addItem(product) }}><AddShoppingCartIcon /></button>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductShowcase","C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Cartpage\\CartShowcase\\CartShowcase.jsx",[],[],"C:\\Users\\paulo\\Desktop\\React shop site\\my-app\\src\\Components\\Cartpage\\CartShowcase\\CartCard\\CartCard.jsx",["96","97","98","99","100","101","102","103","104","105","106","107","108"],[],"import React from 'react'\r\nimport './cartCard.scss'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { useRef, useState } from 'react';\r\n\r\nconst CartCard = (props) => {\r\n    const deleteButton = useRef()\r\n\r\n    let storage = JSON.parse(localStorage.getItem('cart')) || []\r\n    const [itemsInProps, setItemsInProps] = useState(storage)\r\n\r\n    function deleteCard(x) {\r\n        let filtered = itemsInProps.filter(function (item) {\r\n            return item.productid !== x.productid\r\n        })\r\n        setItemsInProps(filtered)\r\n        props.setTotalPrice(filtered)\r\n        let total = 0\r\n        let cart = filtered.map(e => {\r\n            total += e.quantity\r\n        })\r\n        props.setCartNumber(`${total}`)\r\n        localStorage.removeItem('cart')\r\n        localStorage.setItem('cart', JSON.stringify(filtered));\r\n\r\n    }\r\n    function minusQuantity(x) {\r\n\r\n        storage.find(item => {\r\n            if (item.productid == x.productid) {\r\n\r\n                if (item.quantity == 1) {\r\n                    let filtered = storage.filter(itemFilter => itemFilter !== item)\r\n                    setItemsInProps(filtered)\r\n                    props.setTotalPrice(filtered)\r\n                    \r\n                    let total = 0\r\n                    let cart = filtered.map(e => {\r\n                        total += e.quantity\r\n                    })\r\n                    props.setCartNumber(`${total}`)\r\n                    localStorage.removeItem('cart')\r\n                    localStorage.setItem('cart', JSON.stringify(filtered));\r\n                }\r\n                else {\r\n                    item.quantity -= 1\r\n                    setItemsInProps(storage)\r\n                    props.setTotalPrice(storage)\r\n                    let total = 0\r\n                    let cart = storage.map(e => {\r\n                        total += e.quantity\r\n                    })\r\n                    props.setCartNumber(`${total}`)\r\n                    localStorage.removeItem('cart')\r\n                    localStorage.setItem('cart', JSON.stringify(storage));\r\n                }\r\n\r\n            }\r\n        })\r\n    }\r\n    function plusQuantity(x) {\r\n        let total = 0\r\n        let cart = storage.map(e => {\r\n            total += e.quantity\r\n        })\r\n        storage.find(item => {\r\n            if (item.productid == x.productid) {\r\n                item.quantity += 1\r\n                setItemsInProps(storage)\r\n                props.setTotalPrice(storage)\r\n                props.setCartNumber(`${total +1}`)\r\n                localStorage.removeItem('cart')\r\n                localStorage.setItem('cart', JSON.stringify(storage));\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className='cartCard'>\r\n            {itemsInProps.map(item => (\r\n                <div ref={deleteButton} className='items' key={uuidv4()}>\r\n                    <img src={require(`../../../Homepage/ProductShowcase/images/${item.productImage}`)} alt=\"\" />\r\n                    <p className='name'>{item.productName}</p>\r\n                    <p className='price'>{item.productPrice}$</p>\r\n                    <div className='quantity'>\r\n                        <button onClick={() => { minusQuantity(item) }}>-</button>\r\n                        <p>{item.quantity}</p>\r\n                        <button onClick={() => { plusQuantity(item) }}>+</button>\r\n                    </div>\r\n                    <button onClick={() => { deleteCard(item) }}><p>x</p></button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartCard",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":14,"column":7,"nodeType":"115","messageId":"116","endLine":14,"endColumn":11},{"ruleId":"117","severity":1,"message":"118","line":14,"column":28,"nodeType":"119","messageId":"120","endLine":14,"endColumn":30},{"ruleId":"113","severity":1,"message":"121","line":14,"column":30,"nodeType":"115","messageId":"116","endLine":14,"endColumn":51},{"ruleId":"122","severity":1,"message":"123","line":30,"column":6,"nodeType":"124","endLine":30,"endColumn":26,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":43,"column":22,"nodeType":"128","messageId":"129","endLine":43,"endColumn":24},{"ruleId":"122","severity":1,"message":"130","line":21,"column":8,"nodeType":"124","endLine":21,"endColumn":10,"suggestions":"131"},{"ruleId":"113","severity":1,"message":"114","line":28,"column":13,"nodeType":"115","messageId":"116","endLine":28,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":28,"column":28,"nodeType":"119","messageId":"120","endLine":28,"endColumn":30},{"ruleId":"117","severity":1,"message":"132","line":32,"column":21,"nodeType":"119","messageId":"120","endLine":32,"endColumn":23},{"ruleId":"126","severity":1,"message":"133","line":33,"column":32,"nodeType":"128","messageId":"129","endLine":33,"endColumn":34},{"ruleId":"117","severity":1,"message":"134","line":62,"column":44,"nodeType":"119","messageId":"135","endLine":62,"endColumn":46},{"ruleId":"126","severity":1,"message":"133","line":63,"column":40,"nodeType":"128","messageId":"129","endLine":63,"endColumn":42},{"ruleId":"136","severity":1,"message":"137","line":35,"column":15,"nodeType":"138","endLine":35,"endColumn":38},{"ruleId":"136","severity":1,"message":"139","line":37,"column":17,"nodeType":"138","endLine":37,"endColumn":47},{"ruleId":"113","severity":1,"message":"140","line":13,"column":11,"nodeType":"115","messageId":"116","endLine":13,"endColumn":15},{"ruleId":"122","severity":1,"message":"141","line":22,"column":8,"nodeType":"124","endLine":22,"endColumn":10,"suggestions":"142"},{"ruleId":"113","severity":1,"message":"114","line":39,"column":13,"nodeType":"115","messageId":"116","endLine":39,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":39,"column":28,"nodeType":"119","messageId":"120","endLine":39,"endColumn":30},{"ruleId":"117","severity":1,"message":"132","line":43,"column":21,"nodeType":"119","messageId":"120","endLine":43,"endColumn":23},{"ruleId":"126","severity":1,"message":"133","line":44,"column":32,"nodeType":"128","messageId":"129","endLine":44,"endColumn":34},{"ruleId":"113","severity":1,"message":"114","line":19,"column":13,"nodeType":"115","messageId":"116","endLine":19,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":19,"column":35,"nodeType":"119","messageId":"120","endLine":19,"endColumn":37},{"ruleId":"117","severity":1,"message":"132","line":29,"column":27,"nodeType":"119","messageId":"120","endLine":29,"endColumn":29},{"ruleId":"126","severity":1,"message":"133","line":30,"column":32,"nodeType":"128","messageId":"129","endLine":30,"endColumn":34},{"ruleId":"126","severity":1,"message":"133","line":32,"column":35,"nodeType":"128","messageId":"129","endLine":32,"endColumn":37},{"ruleId":"113","severity":1,"message":"114","line":38,"column":25,"nodeType":"115","messageId":"116","endLine":38,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":38,"column":47,"nodeType":"119","messageId":"120","endLine":38,"endColumn":49},{"ruleId":"113","severity":1,"message":"114","line":50,"column":25,"nodeType":"115","messageId":"116","endLine":50,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":50,"column":46,"nodeType":"119","messageId":"120","endLine":50,"endColumn":48},{"ruleId":"113","severity":1,"message":"114","line":63,"column":13,"nodeType":"115","messageId":"116","endLine":63,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":63,"column":34,"nodeType":"119","messageId":"120","endLine":63,"endColumn":36},{"ruleId":"117","severity":1,"message":"132","line":66,"column":27,"nodeType":"119","messageId":"120","endLine":66,"endColumn":29},{"ruleId":"126","severity":1,"message":"133","line":67,"column":32,"nodeType":"128","messageId":"129","endLine":67,"endColumn":34},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'cart' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setUpdateCommentPanel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'port' and 'product'. Either include them or remove the dependency array.","ArrayExpression",["145"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'port'. Either include it or remove the dependency array.",["146"],"Array.prototype.find() expects a return value from arrow function.","Expected '===' and instead saw '=='.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'port' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.fetch'. Either include it or remove the dependency array.",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [port, product, updateCommentPanel]",{"range":"154","text":"155"},"Update the dependencies array to be: [port]",{"range":"156","text":"157"},"Update the dependencies array to be: [props.fetch]",{"range":"158","text":"159"},[1057,1077],"[port, product, updateCommentPanel]",[833,835],"[port]",[868,870],"[props.fetch]"]