{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo\\\\Desktop\\\\react shop\\\\react-shop\\\\my-app\\\\src\\\\Components\\\\Products\\\\Products.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../Homepage/Navbar/Navbar';\nimport './products.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Products = () => {\n  _s();\n\n  const [Products, SetProducts] = useState([]);\n  const [Search, setSearch] = useState('');\n  let pictureFolder = '';\n  useEffect(() => {\n    fetch('http://localhost:9000/popular', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json().then(data => {\n      SetProducts(data);\n    }));\n  }, []);\n\n  function addItem(x) {\n    let a = [];\n    let pushNewData = true;\n    a = JSON.parse(localStorage.getItem('cart')) || [];\n    let total = 1;\n    let cart = a.map(e => {\n      total += e.quantity;\n    }); // a.find(item => {\n    //     if (item.productid == x.productid) {\n    //         item.quantity += 1\n    //         pushNewData = false\n    //         props.setCartNumber(`${total}`)\n    //         localStorage.setItem('cart', JSON.stringify(a))\n    //     }\n    // })\n    // if (pushNewData) {\n    //     x.quantity = 1\n    //     a.push(x);\n    //     props.setCartNumber(`${total}`)\n    //     localStorage.setItem('cart', JSON.stringify(a))\n    // }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: [\" Search\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => {\n                setSearch(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productsPanel\",\n          children: Products.filter(e => {\n            if (Search == '') {\n              return e;\n            } else if (e.productName.toLowerCase().includes(Search.toLowerCase())) {\n              return e;\n            }\n          }).map(product => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: product.productName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Current price: \", product.productPrice, \"$\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: require(`../Homepage/ProductShowcase/images/${product.productImage}`),\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"blackOverlay\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    addItem(product);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(AddShoppingCartIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 82\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Products, \"BhV1OmZJhIir6IYiu/DfzxsSD2Y=\");\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["C:/Users/paulo/Desktop/react shop/react-shop/my-app/src/Components/Products/Products.jsx"],"names":["React","useState","useEffect","Navbar","Products","SetProducts","Search","setSearch","pictureFolder","fetch","method","headers","then","response","json","data","addItem","x","a","pushNewData","JSON","parse","localStorage","getItem","total","cart","map","e","quantity","target","value","filter","productName","toLowerCase","includes","product","productPrice","require","productImage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../Homepage/Navbar/Navbar'\r\nimport './products.scss'\r\n\r\nconst Products = () => {\r\n    const [Products, SetProducts] = useState([]);\r\n    const [Search, setSearch] = useState('')\r\n    let pictureFolder = ''\r\n    useEffect(() => {\r\n        fetch('http://localhost:9000/popular', {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(response => response.json().then(data => {\r\n            SetProducts(data)\r\n        }))\r\n    }, [])\r\n    function addItem(x) {\r\n        let a = []\r\n        let pushNewData = true\r\n        a = JSON.parse(localStorage.getItem('cart')) || [];\r\n\r\n        let total = 1\r\n        let cart = a.map(e => {\r\n            total += e.quantity\r\n        })\r\n\r\n        // a.find(item => {\r\n        //     if (item.productid == x.productid) {\r\n        //         item.quantity += 1\r\n        //         pushNewData = false\r\n        //         props.setCartNumber(`${total}`)\r\n        //         localStorage.setItem('cart', JSON.stringify(a))\r\n        //     }\r\n        // })\r\n        // if (pushNewData) {\r\n        //     x.quantity = 1\r\n        //     a.push(x);\r\n        //     props.setCartNumber(`${total}`)\r\n        //     localStorage.setItem('cart', JSON.stringify(a))\r\n        // }\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div>\r\n                <div className='products'>\r\n                    <div className='search'>\r\n                        <label htmlFor=\"\"> Search\r\n                            <input type=\"text\" onChange={e => { setSearch(e.target.value) }} />\r\n                        </label>\r\n                    </div>\r\n                    <div className='productsPanel'>\r\n                        {Products.filter(e => {\r\n                            if (Search == '') {\r\n                                return e\r\n                            } else if (e.productName.toLowerCase().includes(Search.toLowerCase())) {\r\n                                return e\r\n                            }\r\n                        }).map(product => {\r\n                            return <div className='card'>\r\n                                <h2>{product.productName}</h2>\r\n                                <h3>Current price: {product.productPrice}$</h3>\r\n                                <img src={require(`../Homepage/ProductShowcase/images/${product.productImage}`)} alt=\"\" />\r\n                                <div className='blackOverlay'>\r\n                                    <button onClick={() => { addItem(product) }}><AddShoppingCartIcon /></button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        })}\r\n\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Products"]},"metadata":{},"sourceType":"module"}