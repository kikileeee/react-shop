{"ast":null,"code":"import _slicedToArray from\"C:/Users/paulo/Desktop/react shop/react-shop/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'./login.scss';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),confirmPassword=_useState6[0],setconfirmPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),email=_useState8[0],setEmail=_useState8[1];var navigate=useNavigate();var _useState9=useState('d-none'),_useState10=_slicedToArray(_useState9,2),refUsername=_useState10[0],setrefUsername=_useState10[1];var _useState11=useState('d-none'),_useState12=_slicedToArray(_useState11,2),refUsernameSame=_useState12[0],setrefUsernameSame=_useState12[1];var _useState13=useState('d-none'),_useState14=_slicedToArray(_useState13,2),refEmail=_useState14[0],setRefEmail=_useState14[1];var _useState15=useState('d-none'),_useState16=_slicedToArray(_useState15,2),refPassword=_useState16[0],setRefPassword=_useState16[1];var _useState17=useState('d-none'),_useState18=_slicedToArray(_useState17,2),refPasswordSame=_useState18[0],setRefPasswordSame=_useState18[1];var data={username:username,email:email,password:password,confirmPassword:confirmPassword};function sendData(){fetch('http://192.168.1.113:9000/users',{method:'POST',body:JSON.stringify(data),headers:{'Content-Type':'application/json'}}).then(function(response){response.json().then(function(data){console.table(data);ispisi(data);if(data.success){navigate('/login');}});});}var handleSubmit=function handleSubmit(e){e.preventDefault();};function ispisi(data){console.log('ispis');if(data.usernameFailed){setrefUsername('');}else{setrefUsername('d-none');}if(data.usernameLengthFailed){setrefUsernameSame('');}else{setrefUsernameSame('d-none');}if(data.emailFailed){setRefEmail('');}else{setRefEmail('d-none');}if(data.passwordLengthFailed){setRefPassword('');}else{setRefPassword('d-none');}if(data.confirmPasswordFailed){setRefPasswordSame('');}else{setRefPasswordSame('d-none');}}return/*#__PURE__*/_jsxs(\"form\",{className:\"login\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sign up\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",onChange:function onChange(e){return setUsername(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{className:refUsername,children:\"Username must have more than 6 Characters\"}),/*#__PURE__*/_jsx(\"p\",{className:refUsernameSame,children:\"Account with that username already exists\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email address\",onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{className:refEmail,children:\"Email address must be valid\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{className:refPassword,children:\"Password must have atleast 6 Characters\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm Password\",onChange:function onChange(e){return setconfirmPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{className:refPasswordSame,children:\"Passwords must be the same\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendData,children:\"Sign up\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Already have an account? Sign in\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/\",onClick:function onClick(){localStorage.removeItem('userInfo');},children:\"Continue as a Guest\"})]});};export default Login;","map":{"version":3,"sources":["C:/Users/paulo/Desktop/react shop/react-shop/my-app/src/Components/Loginpage/Signup.jsx"],"names":["React","useState","useNavigate","Login","username","setUsername","password","setPassword","confirmPassword","setconfirmPassword","email","setEmail","navigate","refUsername","setrefUsername","refUsernameSame","setrefUsernameSame","refEmail","setRefEmail","refPassword","setRefPassword","refPasswordSame","setRefPasswordSame","data","sendData","fetch","method","body","JSON","stringify","headers","then","response","json","console","table","ispisi","success","handleSubmit","e","preventDefault","log","usernameFailed","usernameLengthFailed","emailFailed","passwordLengthFailed","confirmPasswordFailed","target","value","localStorage","removeItem"],"mappings":"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","sourcesContent":["import React, { useState} from 'react'\r\nimport './login.scss'\r\nimport {  useNavigate } from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setconfirmPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const navigate = useNavigate()\r\n\r\n  const [refUsername, setrefUsername] = useState('d-none')\r\n  const [refUsernameSame, setrefUsernameSame] = useState('d-none')\r\n  const [refEmail, setRefEmail] = useState('d-none')\r\n  const [refPassword, setRefPassword] = useState('d-none')\r\n  const [refPasswordSame, setRefPasswordSame] = useState('d-none')\r\n\r\n\r\n\r\n  let data = {\r\n    username: username,\r\n    email: email,\r\n    password: password,\r\n    confirmPassword: confirmPassword\r\n  }\r\n\r\n  function sendData() {\r\n    fetch('http://192.168.1.113:9000/users', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }).then(response => {\r\n      response.json().then(data => {\r\n\r\n        console.table(data)\r\n        ispisi(data)\r\n        if (data.success) {\r\n          navigate('/login')\r\n        }\r\n      })\r\n    })\r\n\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n  }\r\n  function ispisi(data) {\r\n    console.log('ispis')\r\n    if (data.usernameFailed) {\r\n      setrefUsername('')\r\n    }\r\n    else {\r\n      setrefUsername('d-none')\r\n    }\r\n    if (data.usernameLengthFailed) {\r\n      setrefUsernameSame('')\r\n    }\r\n    else {\r\n      setrefUsernameSame('d-none')\r\n    }\r\n    if (data.emailFailed) {\r\n      setRefEmail('')\r\n    }\r\n    else {\r\n      setRefEmail('d-none')\r\n    }\r\n    if (data.passwordLengthFailed) {\r\n      setRefPassword('')\r\n    }\r\n    else {\r\n      setRefPassword('d-none')\r\n    }\r\n    if (data.confirmPasswordFailed) {\r\n      setRefPasswordSame('')\r\n    }\r\n    else {\r\n      setRefPasswordSame('d-none')\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form className='login' onSubmit={handleSubmit}>\r\n      <h2>Sign up</h2>\r\n      <input type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} />\r\n      <p className={refUsername}>Username must have more than 6 Characters</p>\r\n      <p className={refUsernameSame}>Account with that username already exists</p>\r\n      <input type=\"email\" placeholder=\"Email address\" onChange={e => setEmail(e.target.value)}></input>\r\n      <p className={refEmail}>Email address must be valid</p>\r\n      <input type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}></input>\r\n      <p className={refPassword}>Password must have atleast 6 Characters</p>\r\n      <input type=\"password\" placeholder=\"Confirm Password\" onChange={e => setconfirmPassword(e.target.value)}></input>\r\n      <p className={refPasswordSame}>Passwords must be the same</p>\r\n      <button onClick={sendData}>Sign up</button>\r\n      <a href=\"/login\">Already have an account? Sign in</a>\r\n      <a href=\"/\" onClick={ () => { localStorage.removeItem('userInfo') }}>Continue as a Guest</a>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}